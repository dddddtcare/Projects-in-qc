import java.awt.event.*;
import java.awt.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

 
public class AdsManagementGUI extends javax.swing.JFrame {
private static Connection conn=DatabaseConnect.ConnerDb();
ResultSet rs=null;
PreparedStatement pst=null;
private static String  SC;
private static String  ZC;
private static Double  RD;
    /**
     * Creates new form SearchResult
     */
    public AdsManagementGUI() {
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        initComponents();
        conn=DatabaseConnect.ConnerDb();
        Update_table();
        //setResizable(false);
    }
        private void Update_table(){
        try{
        String sql = "SELECT ad_id,ad_tittle,location,time_posted,ad_type, ad_url,Saved\n" +
                     "FROM `database`.sr;";
        pst = conn.prepareStatement(sql);
        rs=pst.executeQuery();
        SaveTable.setModel(DbUtils.resultSetToTableModel(rs));
     
           ResultTable.setViewportView(SaveTable);
        if (SaveTable.getColumnModel().getColumnCount() > 0) {
            SaveTable.getColumnModel().getColumn(0).setMinWidth(20);
            SaveTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            SaveTable.getColumnModel().getColumn(0).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(1).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(1).setPreferredWidth(250);
            SaveTable.getColumnModel().getColumn(1).setMaxWidth(600);
            SaveTable.getColumnModel().getColumn(2).setMinWidth(50);
            SaveTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            SaveTable.getColumnModel().getColumn(2).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(3).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            SaveTable.getColumnModel().getColumn(3).setMaxWidth(150);
            SaveTable.getColumnModel().getColumn(4).setMinWidth(50);
            SaveTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            SaveTable.getColumnModel().getColumn(4).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(5).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            SaveTable.getColumnModel().getColumn(5).setMaxWidth(600);
            SaveTable.getColumnModel().getColumn(6).setMinWidth(10);
            SaveTable.getColumnModel().getColumn(6).setPreferredWidth(45);
            SaveTable.getColumnModel().getColumn(6).setMaxWidth(60);
        }
         SaveTable.setAutoCreateRowSorter(true); 
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchPanel = new javax.swing.JPanel();
        SC1 = new javax.swing.JTextField();
        RD1 = new javax.swing.JTextField();
        ZC1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        SearchBottom = new javax.swing.JButton();
        HeaderLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ResultsPanel = new javax.swing.JPanel();
        ResultTable = new javax.swing.JScrollPane();
        SaveTable = new javax.swing.JTable();
        HeaderPanel = new javax.swing.JPanel();
        BackToResults = new javax.swing.JButton();
        ViewAd = new javax.swing.JButton();
        DeleteAd = new javax.swing.JButton();
        StoreData = new javax.swing.JButton();
        GoAdDirectory = new javax.swing.JButton();
        header = new javax.swing.JLabel();

        setTitle("Saved Ads Management");
        setPreferredSize(new java.awt.Dimension(742, 497));

        SearchPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SC1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Mincho Light", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText(" Radius(km)");

        jLabel4.setFont(new java.awt.Font("Yu Mincho Light", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText(" Search Content");

        jLabel2.setFont(new java.awt.Font("Yu Mincho Light", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("   Zip Code");

        SearchBottom.setText("Search");
        SearchBottom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBottomActionPerformed(evt);
            }
        });

        HeaderLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/craigslistdealers1.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/craigslistdealers2.png"))); // NOI18N

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(SC1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)))
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ZC1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RD1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchBottom)
                .addContainerGap())
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SC1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ZC1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RD1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(HeaderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ResultsPanel.setToolTipText("Results");
        ResultsPanel.setLayout(null);

        ResultTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SaveTable.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("")));
        SaveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "AD ID", "Ad Tittle", "Location", "Time Posted", "Ad Type", "Ad URL", "Saved"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ResultTable.setViewportView(SaveTable);
        if (SaveTable.getColumnModel().getColumnCount() > 0) {
            SaveTable.getColumnModel().getColumn(0).setMinWidth(20);
            SaveTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            SaveTable.getColumnModel().getColumn(0).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(1).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(1).setPreferredWidth(250);
            SaveTable.getColumnModel().getColumn(1).setMaxWidth(600);
            SaveTable.getColumnModel().getColumn(2).setMinWidth(50);
            SaveTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            SaveTable.getColumnModel().getColumn(2).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(3).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            SaveTable.getColumnModel().getColumn(3).setMaxWidth(150);
            SaveTable.getColumnModel().getColumn(4).setMinWidth(50);
            SaveTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            SaveTable.getColumnModel().getColumn(4).setMaxWidth(100);
            SaveTable.getColumnModel().getColumn(5).setMinWidth(100);
            SaveTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            SaveTable.getColumnModel().getColumn(5).setMaxWidth(600);
            SaveTable.getColumnModel().getColumn(6).setMinWidth(10);
            SaveTable.getColumnModel().getColumn(6).setPreferredWidth(45);
            SaveTable.getColumnModel().getColumn(6).setMaxWidth(60);
        }

        ResultsPanel.add(ResultTable);
        ResultTable.setBounds(0, 0, 760, 330);

        HeaderPanel.setLayout(null);

        BackToResults.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        BackToResults.setText("Back to Results");
        BackToResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToResultsActionPerformed(evt);
            }
        });
        HeaderPanel.add(BackToResults);
        BackToResults.setBounds(20, 10, 120, 40);

        ViewAd.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        ViewAd.setText("View Selected Ad");
        ViewAd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewAdActionPerformed(evt);
            }
        });
        HeaderPanel.add(ViewAd);
        ViewAd.setBounds(170, 10, 120, 40);

        DeleteAd.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        DeleteAd.setText("Delete Selected Ad");
        DeleteAd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAdActionPerformed(evt);
            }
        });
        HeaderPanel.add(DeleteAd);
        DeleteAd.setBounds(320, 10, 130, 40);

        StoreData.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        StoreData.setText("Store Ad's Data");
        StoreData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreDataActionPerformed(evt);
            }
        });
        HeaderPanel.add(StoreData);
        StoreData.setBounds(480, 10, 120, 40);

        GoAdDirectory.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        GoAdDirectory.setText("Ad's Data Directory");
        GoAdDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoAdDirectoryActionPerformed(evt);
            }
        });
        HeaderPanel.add(GoAdDirectory);
        GoAdDirectory.setBounds(620, 10, 130, 40);

        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Purple-header2.jpg"))); // NOI18N
        HeaderPanel.add(header);
        header.setBounds(0, 0, 760, 60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(782, 541));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackToResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToResultsActionPerformed
               dispose();
        ResultsGUI RG = new ResultsGUI();
        RG.setVisible(true);        // TODO add your handling code here:
              
    }//GEN-LAST:event_BackToResultsActionPerformed

    private void SearchBottomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBottomActionPerformed
       SearchAPP.Results.clear();
                 SearchAPP.URL.clear();
                 SearchAPP.count=-1;
                 SearchAPP.done=0;
                 SearchAPP.table=null;
            try {
   
 SC=SC1.getText();
           ZC=ZC1.getText();        
           RD = Double.parseDouble(RD1.getText());
          
                      SearchAPP.SearchFunction(SC, ZC, RD); 
           SearchAPP.table = new Object [100*SearchAPP.URL.size()][5];
           System.out.println(SearchAPP.table.length);
         for (int i = 0; i <SearchAPP.Results.size();i++)  //99*SearchAPP.URL.size()               
           new Thread(new SearchAPP.ST()).start(); 
           JOptionPane.showMessageDialog(null, "Searching!!!  If some content missing, try to click refresh results bottom. "); 
          
           while(SearchAPP.done<SearchAPP.Results.size()){
           System.out.println("Processing %"+SearchAPP.done);
        
             if(SearchAPP.count>SearchAPP.done+100)
             {
                 JOptionPane.showMessageDialog(null,"Your Internet is  slow!  Some contents may be missing. Click Refresh bottom to view Missing part OR TRY it later.");
                 break;
             }
            // jProgressBar1.setValue(SearchAPP.done);
         }
        dispose();
        ResultsGUI RG = new ResultsGUI();
        RG.setVisible(true); 
             }catch(Exception e){
               JOptionPane.showMessageDialog(null, "No Results found, Please recheck the query"); 
           }
       
 // TODO add your handling code here:
    }//GEN-LAST:event_SearchBottomActionPerformed

    private void SC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SC1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SC1ActionPerformed

    private void DeleteAdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAdActionPerformed
        String sql="delete from `database`.sr where ad_id = ?";
        try{
                                        int row = SaveTable.getSelectedRow();
                            String Table_click=(SaveTable.getModel().getValueAt(row,0).toString());
            pst = conn.prepareStatement(sql);
            pst.setString(1, Table_click);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
           }catch(Exception e){
               JOptionPane.showMessageDialog(null, "Please Select an Ad"); 
           }
        Update_table(); // TODO add your handling code here:
    }//GEN-LAST:event_DeleteAdActionPerformed

    private void ViewAdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewAdActionPerformed
                       try {
                            int row = SaveTable.getSelectedRow();
                            String Table_click=(SaveTable.getModel().getValueAt(row,5).toString());
                        String[] cmd = new String[4];
                        cmd[0] = "cmd.exe";
                        cmd[1] = "/C";
                        cmd[2] = "start";
                        cmd[3] = Table_click;
                         Process p = Runtime.getRuntime().exec(cmd);
        }catch(Exception e){
               JOptionPane.showMessageDialog(null, "error"); 
           }
    }//GEN-LAST:event_ViewAdActionPerformed

    private void StoreDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreDataActionPerformed
     try {                  String sql="update  database.sr\n" +
                                          "set sr.Saved='Y'\n" +
                                           "where sr.ad_id=?;";
                            int row = SaveTable.getSelectedRow();
                            String index=(SaveTable.getModel().getValueAt(row,0).toString());
                            String url=(SaveTable.getModel().getValueAt(row,5).toString());
                            System.out.println(index);
                            System.out.println(url);
                            webpageReader.SaveAdData(url, index);
                            ArrayList<String> image= new ArrayList<String>();
                            image=webpageReader.FindImage(url);
                            for(int i=0; i<image.size();i++)
                            DownloadImage.getImage(image.get(i), index);
            pst = conn.prepareStatement(sql);
            pst.setString(1, index);
            pst.execute();
            Update_table();
        }catch(Exception e){
               JOptionPane.showMessageDialog(null, "Error, Please Select an Ad"); 
           }
    }//GEN-LAST:event_StoreDataActionPerformed

    private void GoAdDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoAdDirectoryActionPerformed
                try {
                    int row = SaveTable.getSelectedRow();
                     String index=(SaveTable.getModel().getValueAt(row,0).toString());
                     String Saved=(SaveTable.getModel().getValueAt(row,6).toString());
                    //JOptionPane.showMessageDialog(null, "It is Ad "+Saved);
                     if(Saved.contains("N"))
                         JOptionPane.showMessageDialog(null, "Error, Please Save Ad Data first");
                     else{
            String path = "C:\\Craigslist\\Ad"+index+"";
            Runtime runtime = Runtime.getRuntime();
            runtime.exec("explorer.exe "+path);}
            //System.out.println("open");
        } catch (Exception E) {
            JOptionPane.showMessageDialog(null, "Error, Please Select an Ad"); 
        }        // TODO add your handling code here:
    }//GEN-LAST:event_GoAdDirectoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdsManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdsManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdsManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdsManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdsManagementGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToResults;
    private javax.swing.JButton DeleteAd;
    private javax.swing.JButton GoAdDirectory;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JTextField RD1;
    private javax.swing.JScrollPane ResultTable;
    private javax.swing.JPanel ResultsPanel;
    private javax.swing.JTextField SC1;
    private javax.swing.JTable SaveTable;
    private javax.swing.JButton SearchBottom;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JButton StoreData;
    private javax.swing.JButton ViewAd;
    private javax.swing.JTextField ZC1;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
